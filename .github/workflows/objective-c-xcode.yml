name: Generate APAC MP4 File

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: # Allows manual triggering

jobs:
  build-and-generate:
    runs-on: macos-latest

    steps:
      # Clone the repository
      - name: Clone repository
        run: |
          echo "Cloning repository at $(date)"
          git clone https://github.com/encryptedcoderr/AppleTest/
          echo "Repository cloned at $(date)"

      # Navigate and list directory contents
      - name: Navigate and list directory contents
        run: |
          echo "Navigating to directory at $(date)"
          cd AppleTest/apple-positional-audio-codec-invalid-header-main
          echo "Listing directory contents at $(date)"
          ls -l
          echo "Directory listing completed at $(date)"

      # Log Xcode setup start
      - name: Log Xcode setup start
        run: |
          echo "Setting up Xcode at $(date)"

      # Set up specific Xcode version
      - name: Set up Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.1' # Use Xcode 16.1, compatible with macOS frameworks

      # Log Xcode setup completion
      - name: Log Xcode setup completion
        run: |
          echo "Xcode setup completed at $(date)"

      # Verify Xcode and clang version
      - name: Verify Xcode and clang version
        run: |
          echo "Verifying Xcode and clang versions at $(date)"
          xcodebuild -version
          clang++ --version
          xcrun --sdk macosx --show-sdk-path
          echo "Verification completed at $(date)"

      # Check system resources
      - name: Check system resources
        run: |
          echo "Checking system resources at $(date)"
          df -h
          system_profiler SPHardwareDataType
          echo "System resource check completed at $(date)"

      # Verify encodeme.mm and build_encodeme.sh
      - name: Verify encodeme.mm and build script
        working-directory: AppleTest/apple-positional-audio-codec-invalid-header-main
        run: |
          echo "Verifying files at $(date)"
          if [ -f "encodeme.mm" ] && [ -f "build_encodeme.sh" ]; then
            echo "encodeme.mm and build_encodeme.sh found"
            ls -l encodeme.mm build_encodeme.sh
          else
            echo "One or both of encodeme.mm or build_encodeme.sh not found"
            ls -l
            exit 1
          fi
          echo "File verification completed at $(date)"

      # Compile encodeme.mm
      - name: Compile encodeme.mm
        working-directory: AppleTest/apple-positional-audio-codec-invalid-header-main
        run: |
          echo "Preparing to compile encodeme.mm at $(date)"
          chmod +x build_encodeme.sh
          echo "Compiling encodeme.mm at $(date)"
          ./build_encodeme.sh
          if [ $? -eq 0 ]; then
            echo "Compilation successful at $(date)"
            echo "Listing compiled binary at $(date)"
            ls -l encodeme || echo "Compiled binary 'encodeme' not found"
          else
            echo "Compilation failed at $(date)"
            exit 1
          fi

      # Verify generated file
      - name: List generated file
        working-directory: AppleTest/apple-positional-audio-codec-invalid-header-main
        run: |
          echo "Checking for generated file at $(date)"
          ls -lh output.mp4 || echo "No output.mp4 file found at $(date)"

      # Log artifact upload start
      - name: Log artifact upload start
        run: |
          echo "Uploading artifact at $(date)"

      # Upload MP4 file as artifact
      - name: Upload MP4 artifact
        uses: actions/upload-artifact@v4
        with:
          name: apac-mp4-file
          path: AppleTest/apple-positional-audio-codec-invalid-header-main/output.mp4
          retention-days: 7
          if-no-files-found: warn

      # Log artifact upload completion
      - name: Log artifact upload completion
        run: |
          echo "Artifact upload completed at $(date)"
