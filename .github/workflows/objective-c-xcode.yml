name: Generate APAC MP4 File

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: # Allows manual triggering

jobs:
  build-and-generate:
    runs-on: macos-latest

    steps:
      # Log checkout start
      - name: Log checkout start
        run: |
          echo "Checking out code at $(date)"

      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          path: apple-positional-audio-codec-invalid-header-main

      # Log checkout completion
      - name: Log checkout completion
        run: |
          echo "Checkout completed at $(date)"

      # Log Xcode setup start
      - name: Log Xcode setup start
        run: |
          echo "Setting up Xcode at $(date)"

      # Set up specific Xcode version
      - name: Set up Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.1' # Use Xcode 16.1, compatible with macOS frameworks

      # Log Xcode setup completion
      - name: Log Xcode setup completion
        run: |
          echo "Xcode setup completed at $(date)"

      # Verify Xcode and clang version
      - name: Verify Xcode and clang version
        run: |
          echo "Verifying Xcode and clang versions at $(date)"
          xcodebuild -version
          clang++ --version
          xcrun --sdk macosx --show-sdk-path
          echo "Verification completed at $(date)"

      # Debug: List files in repository
      - name: Debug directory contents
        working-directory: apple-positional-audio-codec-invalid-header-main
        run: |
          echo "Listing directory contents at $(date)"
          ls -l
          echo "Directory listing completed at $(date)"

      # Check system resources
      - name: Check system resources
        run: |
          echo "Checking system resources at $(date)"
          df -h
          system_profiler SPHardwareDataType
          echo "System resource check completed at $(date)"

      # Create build script
      - name: Create build script
        working-directory: apple-positional-audio-codec-invalid-header-main
        run: |
          echo "Creating build script at $(date)"
          cat << 'EOF' > build_encodeme.sh
          #!/bin/bash
          set -e
          clang++ -g -Os -std=c++2b -fmodules -fcxx-modules -fobjc-arc -arch x86_64 -arch arm64 -isysroot $(xcrun --sdk macosx --show-sdk-path) -framework AVFAudio -framework AudioToolbox encodeme.mm -o encodeme
          chmod +x encodeme
          EOF
          chmod +x build_encodeme.sh
          echo "Build script created at $(date)"

      # Compile encodeme.mm
      - name: Compile encodeme.mm
        working-directory: apple-positional-audio-codec-invalid-header-main
        run: |
          echo "Listing files to be compiled at $(date)"
          ls -l encodeme.mm build_encodeme.sh || echo "One or more files not found"
          echo "Compiling encodeme.mm at $(date)"
          ./build_encodeme.sh
          if [ $? -eq 0 ]; then
            echo "Compilation successful at $(date)"
            echo "Listing compiled binary at $(date)"
            ls -l encodeme || echo "Compiled binary 'encodeme' not found"
          else
            echo "Compilation failed at $(date)"
            exit 1
          fi

      # Verify generated file
      - name: List generated file
        working-directory: apple-positional-audio-codec-invalid-header-main
        run: |
          echo "Checking for generated file at $(date)"
          ls -lh output.mp4 || echo "No output.mp4 file found at $(date)"

      # Log artifact upload start
      - name: Log artifact upload start
        run: |
          echo "Uploading artifact at $(date)"

      # Upload MP4 file as artifact
      - name: Upload MP4 artifact
        uses: actions/upload-artifact@v4
        with:
          name: apac-mp4-file
          path: apple-positional-audio-codec-invalid-header-main/output.mp4
          retention-days: 7
          if-no-files-found: warn

      # Log artifact upload completion
      - name: Log artifact upload completion
        run: |
          echo "Artifact upload completed at $(date)"
